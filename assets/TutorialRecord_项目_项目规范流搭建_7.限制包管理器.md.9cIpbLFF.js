import{_ as s,c as i,a4 as l,o as t}from"./chunks/framework.vOILIgLK.js";const k=JSON.parse('{"title":"限制包管理器","description":"","frontmatter":{},"headers":[],"relativePath":"TutorialRecord/项目/项目规范流搭建/7.限制包管理器.md","filePath":"TutorialRecord/项目/项目规范流搭建/7.限制包管理器.md"}'),n={name:"TutorialRecord/项目/项目规范流搭建/7.限制包管理器.md"};function e(o,a,p,r,h,d){return t(),i("div",null,a[0]||(a[0]=[l(`<h1 id="限制包管理器" tabindex="-1">限制包管理器 <a class="header-anchor" href="#限制包管理器" aria-label="Permalink to &quot;限制包管理器&quot;">​</a></h1><h2 id="目的" tabindex="-1">目的 <a class="header-anchor" href="#目的" aria-label="Permalink to &quot;目的&quot;">​</a></h2><p>统一团队的包管理器，防止出现不同的锁文件冲突，或者胡乱依赖</p><h2 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-label="Permalink to &quot;方案&quot;">​</a></h2><h3 id="only-allow" tabindex="-1">only-allow <a class="header-anchor" href="#only-allow" aria-label="Permalink to &quot;only-allow&quot;">​</a></h3><ol><li>安装</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pnpm add </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> only</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">allow</span></span></code></pre></div><ol start="2"><li>使用 package.json</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;preinstall&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;npx only-allow pnpm&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="3"><li>效果<img src="https://ankang-blog-img.oss-cn-beijing.aliyuncs.com/myBlogImg/20250409/a0qvpP.png" alt="" data-fancybox="gallery" loading="lazy"></li></ol><h4 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h4><p>参见 only-allow 源码<a href="https://github.com/pnpm/only-allow/blob/master/bin.js" target="_blank" rel="noreferrer">https://github.com/pnpm/only-allow/blob/master/bin.js</a></p><p>简单看</p><ol><li>在 preinstall 阶段（在 install 之前），先执行 only-allow</li><li>在内部进行判断</li><li>不符合通过 process.exit(1)打断</li></ol>`,14)]))}const g=s(n,[["render",e]]);export{k as __pageData,g as default};
