import{_ as i,c as a,j as s,a as l,G as o,w as n,a4 as e,B as d,o as u}from"./chunks/framework.vOILIgLK.js";const K=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"DeepUnderstanding/P1 深入理解系列/1.JavaScript_执行上下文（参考ECMA2024）.md","filePath":"DeepUnderstanding/P1 深入理解系列/1.JavaScript_执行上下文（参考ECMA2024）.md"}'),g={name:"DeepUnderstanding/P1 深入理解系列/1.JavaScript_执行上下文（参考ECMA2024）.md"},b={id:"理解ec、ecs",tabindex:"-1"},p={class:"warning custom-block"},f={id:"执行上下文类型",tabindex:"-1"},y={id:"执行上下文的内部结构",tabindex:"-1"},k={tabindex:"0"},E={href:"https://262.ecma-international.org/#sec-execution-contexts",target:"_blank",rel:"noreferrer"},m={href:"https://ecma262.com/2024/#sec-execution-contexts",target:"_blank",rel:"noreferrer"},x={href:"https://262.ecma-international.org/#sec-execution-contexts",target:"_blank",rel:"noreferrer"},v={href:"https://262.ecma-international.org/#function-object",target:"_blank",rel:"noreferrer"},C={href:"https://262.ecma-international.org/#function-object",target:"_blank",rel:"noreferrer"},M={href:"https://262.ecma-international.org/#prod-Script",target:"_blank",rel:"noreferrer"},A={href:"https://262.ecma-international.org/#prod-Module",target:"_blank",rel:"noreferrer"},w={href:"https://262.ecma-international.org/#realm",target:"_blank",rel:"noreferrer"},j={href:"https://262.ecma-international.org/#realm-record",target:"_blank",rel:"noreferrer"},S={href:"https://262.ecma-international.org/#sec-abstract-module-records",target:"_blank",rel:"noreferrer"},D={href:"https://262.ecma-international.org/#script-record",target:"_blank",rel:"noreferrer"},N={href:"https://262.ecma-international.org/#sec-execution-contexts",target:"_blank",rel:"noreferrer"},P={href:"https://262.ecma-international.org/#sec-initializehostdefinedrealm",target:"_blank",rel:"noreferrer"},z={href:"https://262.ecma-international.org/#sec-environment-records",target:"_blank",rel:"noreferrer"},T={href:"https://262.ecma-international.org/#sec-execution-contexts",target:"_blank",rel:"noreferrer"},F={href:"https://262.ecma-international.org/#sec-environment-records",target:"_blank",rel:"noreferrer"},I={href:"https://262.ecma-international.org/#prod-VariableStatement",target:"_blank",rel:"noreferrer"},V={href:"https://262.ecma-international.org/#sec-execution-contexts",target:"_blank",rel:"noreferrer"},L={href:"https://262.ecma-international.org/#privateenvironment-record",target:"_blank",rel:"noreferrer"},q={href:"https://262.ecma-international.org/#sec-private-names",target:"_blank",rel:"noreferrer"},R={href:"https://262.ecma-international.org/#prod-ClassElement",target:"_blank",rel:"noreferrer"},U={class:"info custom-block"};function O(B,t,G,J,Q,W){const r=d("font");return u(),a("div",null,[t[181]||(t[181]=s("h2",{id:"全局对象",tabindex:"-1"},[l("全局对象 "),s("a",{class:"header-anchor",href:"#全局对象","aria-label":'Permalink to "全局对象"'},"​")],-1)),t[182]||(t[182]=s("p",null,[s("a",{href:"https://262.ecma-international.org/#sec-global-object",target:"_blank",rel:"noreferrer"},"https://262.ecma-international.org/#sec-global-object")],-1)),s("blockquote",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[0]||(t[0]=[l("The global object:")])),_:1}),s("ul",null,[s("li",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[1]||(t[1]=[l("is created before control enters any")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),t[4]||(t[4]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[2]||(t[2]=[l("execution context")])),_:1}),t[5]||(t[5]=l("](https://262.ecma-international.org/#sec-execution-contexts)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[3]||(t[3]=[l(".")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[6]||(t[6]=[l("does not have a")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),t[12]||(t[12]=l("[[Construct]]")),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[7]||(t[7]=[l("internal method; it cannot be used as a")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),t[13]||(t[13]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[8]||(t[8]=[l("constructor")])),_:1}),t[14]||(t[14]=l("](https://262.ecma-international.org/#constructor)")),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[9]||(t[9]=[l("with the")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),t[15]||(t[15]=l("`**")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[10]||(t[10]=[l("new")])),_:1}),t[16]||(t[16]=l("**`")),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[11]||(t[11]=[l("operator.")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[17]||(t[17]=[l("does not have a")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),t[19]||(t[19]=l("[[Call]]")),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[18]||(t[18]=[l("internal method; it cannot be invoked as a function.")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[20]||(t[20]=[l("has a")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),t[24]||(t[24]=l("[[Prototype]]")),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[21]||(t[21]=[l("internal slot whose value is")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),t[25]||(t[25]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[22]||(t[22]=[l("host-defined")])),_:1}),t[26]||(t[26]=l("](https://262.ecma-international.org/#host-defined)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[23]||(t[23]=[l(".")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[27]||(t[27]=[l("may have ")])),_:1}),t[30]||(t[30]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[28]||(t[28]=[l("host-defined")])),_:1}),t[31]||(t[31]=l("](https://262.ecma-international.org/#host-defined)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[29]||(t[29]=[l(" properties in addition to the properties defined in this specification. This may include a property whose value is the global object itself.")])),_:1})])])]),t[183]||(t[183]=s("p",null,"翻译：",-1)),s("blockquote",null,[s("ul",null,[t[36]||(t[36]=s("li",null,[l("全局对象是控制器control进入任何"),s("strong",null,"执行上下文"),l("之前创建 - 创建时机")],-1)),s("li",null,[o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[32]||(t[32]=[l("没有[[Construct]]内部方法，因此不能与 new 操作符一起用作构造函数。")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[33]||(t[33]=[l("没有[[call]]内部方法，不能作为函数调用。")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[34]||(t[34]=[l("宿主环境可以自定义全局对象的原型数据")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[35]||(t[35]=[l("除了本规范中定义的属性外，全局对象还可以有宿主环境定义的属性。 这可能包括一个属性，其值就是全局对象本身。（浏览器window）")])),_:1})])])]),t[184]||(t[184]=s("p",null,"重点：",-1)),t[185]||(t[185]=s("p",null,[l("创建时机在进入任何"),s("strong",null,"执行上下文"),l("之前；")],-1)),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[37]||(t[37]=[l("全局对象还可以有宿主环境定义的属性；（内置API、window）")])),_:1}),t[186]||(t[186]=e(`<p>理解：</p><p>V8会在真正开始执行javascript代码前，会初始化js运行所需要的基础环境，<code>堆、栈空间</code>、<code>全局执行上下文</code>、<code>事件循环系统</code>等</p><p>在进入全局执行上下文之前，全局对象会被创建。</p><p>伪代码</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GlobalObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  window</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  String,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Array,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Object,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Date,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Settimeout</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>执行上下文是什么？</p></div><h2 id="执行上下文-execution-context-执行上下文栈-ecs" tabindex="-1">执行上下文 Execution Context &amp; 执行上下文栈 ECS <a class="header-anchor" href="#执行上下文-execution-context-执行上下文栈-ecs" aria-label="Permalink to &quot;执行上下文 Execution Context &amp; 执行上下文栈 ECS&quot;">​</a></h2><p><a href="https://262.ecma-international.org/#sec-execution-contexts" target="_blank" rel="noreferrer">https://262.ecma-international.org/#sec-execution-contexts</a></p>`,8)),s("blockquote",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[38]||(t[38]=[l("An execution context is a specification device that is used to track the runtime evaluation of code by an ECMAScript implementation. ")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[39]||(t[39]=[l("执行上下文 是一个规范设备，用于跟踪 ECMAScript 实现对代码的运行时评估。")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[40]||(t[40]=[l("An execution context is purely a specification mechanism and need not correspond to any particular artefact of an ECMAScript implementation. It is impossible for ECMAScript code to directly access or observe an execution context.")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[41]||(t[41]=[l("执行上下文纯粹是一个规范机制，不需要对应于 ECMAScript 实现的任何特定制品。ECMAScript 代码不可能直接访问或观察到执行上下文。")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[42]||(t[42]=[l("The execution context stack is used to track execution contexts. The ")])),_:1}),t[55]||(t[55]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[43]||(t[43]=[l("running execution context")])),_:1}),t[56]||(t[56]=l("](https://262.ecma-international.org/#running-execution-context)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[44]||(t[44]=[l(" is always the top element of this stack.")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[45]||(t[45]=[l("执行上下文堆栈 用于跟踪执行上下文。")])),_:1}),t[57]||(t[57]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[46]||(t[46]=[l("正在运行的执行上下文")])),_:1}),t[58]||(t[58]=l("](https://ecma262.com/2024/#running-execution-context)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[47]||(t[47]=[l(" 始终是该堆栈的顶部元素。")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[48]||(t[48]=[l("A new execution context is created whenever control is transferred from the executable code associated with the currently ")])),_:1}),t[59]||(t[59]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[49]||(t[49]=[l("running execution context")])),_:1}),t[60]||(t[60]=l("](https://262.ecma-international.org/15.0/index.html?_gl=1*qxsvcj*_ga*MzQwMjYwNjQxLjE3MzMyMDU5NjU.*_ga_TDCK4DWEPP*MTczMzIwNTk2NC4xLjEuMTczMzIwNzAxMC4wLjAuMA..#running-execution-context)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[50]||(t[50]=[l(" to executable code that is not associated with that execution context. The newly created execution context is pushed onto the stack and becomes the ")])),_:1}),t[61]||(t[61]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[51]||(t[51]=[l("running execution context")])),_:1}),t[62]||(t[62]=l("](https://262.ecma-international.org/15.0/index.html?_gl=1*qxsvcj*_ga*MzQwMjYwNjQxLjE3MzMyMDU5NjU.*_ga_TDCK4DWEPP*MTczMzIwNTk2NC4xLjEuMTczMzIwNzAxMC4wLjAuMA..#running-execution-context)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[52]||(t[52]=[l(".")])),_:1}),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[53]||(t[53]=[l("每当控制权从与当前运行的执行上下文相关联的可执行代码转移到与该执行上下文无关的可执行代码时，就会创建一个新的执行上下文。 新创建的执行上下文被推入堆栈，成为运行中的执行上下文。-- ")])),_:1}),t[63]||(t[63]=l("**")),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[54]||(t[54]=[l("执行上下文的创建")])),_:1}),t[64]||(t[64]=l("**"))]),s("h3",b,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[65]||(t[65]=[l("理解EC、ECS")])),_:1}),t[66]||(t[66]=l()),t[67]||(t[67]=s("a",{class:"header-anchor",href:"#理解ec、ecs","aria-label":'Permalink to "<font style="color:rgb(17, 17, 17);">理解EC、ECS</font>"'},"​",-1))]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[68]||(t[68]=[l("执行上下文是在我们执行可执行文件时创建的 - 抽象概念")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[69]||(t[69]=[l("执行上下文栈，控制的执行上下文的状态的栈结构，从最")])),_:1}),t[187]||(t[187]=l("[新的ECMA规范](about:blank)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[70]||(t[70]=[l("理解：")])),_:1}),s("ul",null,[s("li",null,[o(r,{style:{color:"rgb(37, 41, 51)"}},{default:n(()=>t[71]||(t[71]=[l("执行上下文栈是用来跟踪执行上下文的，当前处于栈顶的是正在运行的执行上下文")])),_:1})]),s("li",null,[o(r,{style:{color:"rgb(37, 41, 51)"}},{default:n(()=>t[72]||(t[72]=[l("调用其他关联的可执行代码时，会创建一个新的执行上下文，并将这个新的执行上下文压入栈顶")])),_:1})])]),s("div",p,[t[75]||(t[75]=s("p",{class:"custom-block-title"},"WARNING",-1)),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[73]||(t[73]=[l("tips: ")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[74]||(t[74]=[l("正如我们每次在执行函数前，都会创建函数执行上下文，当函数执行时，此执行上下文是处于调用栈顶部。执行完成后，这个函数的执行上下文就会被干掉。")])),_:1})]),t[188]||(t[188]=s("p",null,":::color3 在某个特定的时刻 只能执行特定的代码。一旦发生函数调用，当前的执行上下文必须停止 执行，并创建新的函数执行上下文来执行函数。当函数执行完成后，将 函数执行上下文销毁，并重新回到发生调用时的执行上下文中。所以需 要跟踪执行上下文——正在执行的上下文以及正在等待的上下文。最简 单的跟踪方法是使用执行上下文栈(或称为调用栈)。 -- js忍者秘籍",-1)),t[189]||(t[189]=s("p",null,":::",-1)),s("h3",f,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[76]||(t[76]=[l("执行上下文类型")])),_:1}),t[77]||(t[77]=l()),t[78]||(t[78]=s("a",{class:"header-anchor",href:"#执行上下文类型","aria-label":'Permalink to "<font style="color:rgb(17, 17, 17);">执行上下文类型</font>"'},"​",-1))]),t[190]||(t[190]=e('<ul><li><strong>全局执行上下文（ GEC）</strong> ：不在任何函数中的代码都位于全局执行上下文中，只有一个，当JavaScript程序开始执行时就已经创建了全局上下文。</li><li><strong>函数执行上下文（ FEC）</strong> ：<strong>只有调用</strong>函数时，才会为该函数创建一个新的执行上下文，可以存在无数个，每当一个新的执行上下文被创建，它都会按照特定的顺序执行一系列步骤。</li><li><strong>Eval 函数执行上下文（eval代码）</strong> ： 指的是运行在 <code>eval</code> 函数中的代码，很少使用。</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>已经了解了EC是什么、以及它的类型，那么对于一个EC而言，它的内部结构是怎样的？</p></div>',2)),s("h3",y,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[79]||(t[79]=[l("执行上下文的内部结构")])),_:1}),t[80]||(t[80]=l()),t[81]||(t[81]=s("a",{class:"header-anchor",href:"#执行上下文的内部结构","aria-label":'Permalink to "<font style="color:rgb(17, 17, 17);">执行上下文的内部结构</font>"'},"​",-1))]),t[191]||(t[191]=s("blockquote",null,[s("p",null,"可以简单理解，一个执行上下文结构内部会包含一系列的组件，这些组件在执行上下文执行过程中有不同的作用")],-1)),s("p",null,[s("em",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[82]||(t[82]=[l("ECMAScript 代码执行上下文的组件：")])),_:1})])]),s("table",k,[s("thead",null,[s("tr",null,[s("th",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[83]||(t[83]=[l("Component")])),_:1})]),s("th",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[84]||(t[84]=[l("Purpose")])),_:1})])])]),s("tbody",null,[s("tr",null,[s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[85]||(t[85]=[l("code evaluation state")])),_:1})]),s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[86]||(t[86]=[l("Any state needed to perform, suspend, and resume evaluation of the code associated with this ")])),_:1}),s("a",E,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[87]||(t[87]=[l("execution context")])),_:1})]),t[91]||(t[91]=s("br",null,null,-1)),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[88]||(t[88]=[l("执行、暂停和恢复与此 ")])),_:1}),s("a",m,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[89]||(t[89]=[l("执行上下文")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[90]||(t[90]=[l(" 关联的代码所需的任何状态。")])),_:1})])]),s("tr",null,[s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[92]||(t[92]=[l("Function")])),_:1})]),s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[93]||(t[93]=[l("If this ")])),_:1}),s("a",x,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[94]||(t[94]=[l("execution context")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[95]||(t[95]=[l(" is evaluating the code of a ")])),_:1}),s("a",v,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[96]||(t[96]=[l("function object")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[97]||(t[97]=[l("，then the value of this component is that ")])),_:1}),s("a",C,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[98]||(t[98]=[l("function object")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[99]||(t[99]=[l(". If the context is evaluating the code of a ")])),_:1}),s("a",M,[s("em",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[100]||(t[100]=[l("Script")])),_:1})])]),s("em",null,[o(r,{style:{color:"rgb(17, 17, 17)"}})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[101]||(t[101]=[l("or ")])),_:1}),s("a",A,[s("em",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[102]||(t[102]=[l("Module")])),_:1})])]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[103]||(t[103]=[l(", the value is ")])),_:1}),s("strong",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[104]||(t[104]=[l("null")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[105]||(t[105]=[l(".")])),_:1}),t[107]||(t[107]=s("br",null,null,-1)),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[106]||(t[106]=[l("如果这个执行上下文评估的是函数对象的代码，那么这个组件的值是该函数对象。如果执行的是Script和Module，这个值是null")])),_:1})])]),s("tr",null,[s("td",null,[s("a",w,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[108]||(t[108]=[l("Realm")])),_:1})])]),s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[109]||(t[109]=[l("The ")])),_:1}),s("a",j,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[110]||(t[110]=[l("Realm Record")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[111]||(t[111]=[l(" from which associated code accesses ECMAScript resources.")])),_:1}),t[114]||(t[114]=s("br",null,null,-1)),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[112]||(t[112]=[l("关联代码访问ECMAScript资源的领域记录")])),_:1}),t[115]||(t[115]=s("br",null,null,-1)),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[113]||(t[113]=[l("在代码运行之前，所有 ECMAScript 代码都必须与一个领域相关联。 从概念上讲，一个领域包括一组内置对象、一个 ECMAScript 全局环境、在该全局环境范围内加载的所有 ECMAScript 代码，以及其他相关状态和资源。")])),_:1})])]),s("tr",null,[s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[116]||(t[116]=[l("ScriptOrModule")])),_:1})]),s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[117]||(t[117]=[l("The ")])),_:1}),s("a",S,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[118]||(t[118]=[l("Module Record")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[119]||(t[119]=[l(" or ")])),_:1}),s("a",D,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[120]||(t[120]=[l("Script Record")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[121]||(t[121]=[l(" from which associated code originates. If there is no originating script or module, as is the case for the original ")])),_:1}),s("a",N,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[122]||(t[122]=[l("execution context")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[123]||(t[123]=[l(" created in ")])),_:1}),s("a",P,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[124]||(t[124]=[l("InitializeHostDefinedRealm")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[125]||(t[125]=[l(", the value is ")])),_:1}),s("strong",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[126]||(t[126]=[l("null")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[127]||(t[127]=[l(".")])),_:1})])]),s("tr",null,[s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[128]||(t[128]=[l("LexicalEnvironment")])),_:1})]),s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[129]||(t[129]=[l("Identifies the")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",z,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[130]||(t[130]=[l("Environment Record")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[131]||(t[131]=[l("used to resolve identifier references made by code within this")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",T,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[132]||(t[132]=[l("execution context")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[133]||(t[133]=[l(".")])),_:1}),t[135]||(t[135]=s("br",null,null,-1)),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[134]||(t[134]=[l("识别 环境记录，用于解析此执行上下文中代码对标识符的引用。")])),_:1})])]),s("tr",null,[s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[136]||(t[136]=[l("VariableEnvironment ")])),_:1})]),s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[137]||(t[137]=[l("Identifies the")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",F,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[138]||(t[138]=[l("Environment Record")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[139]||(t[139]=[l("that holds bindings created by")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",I,[s("em",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[140]||(t[140]=[l("VariableStatement")])),_:1})])]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[141]||(t[141]=[l("s within this")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",V,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[142]||(t[142]=[l("execution context")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[143]||(t[143]=[l(".")])),_:1}),t[147]||(t[147]=s("br",null,null,-1)),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[144]||(t[144]=[l("用于标识环境记录，该环境记录保存由该执行上下文中的 VariableStatements 创建的绑定。")])),_:1}),t[148]||(t[148]=s("br",null,null,-1)),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[145]||(t[145]=[l("VariableStatements: ")])),_:1}),s("strong",null,[o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[146]||(t[146]=[l("var声明的变量")])),_:1})])])]),s("tr",null,[s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[149]||(t[149]=[l("PrivateEnvironment")])),_:1})]),s("td",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[150]||(t[150]=[l("Identifies the")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",L,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[151]||(t[151]=[l("PrivateEnvironment Record")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[152]||(t[152]=[l("that holds")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",q,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[153]||(t[153]=[l("Private Names")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[154]||(t[154]=[l("created by")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("a",R,[s("em",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[155]||(t[155]=[l("ClassElement")])),_:1})])]),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[156]||(t[156]=[l("s in the nearest containing class.")])),_:1}),o(r,{style:{color:"rgb(17, 17, 17)"}}),s("strong",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[157]||(t[157]=[l("null")])),_:1})]),o(r,{style:{color:"rgb(17, 17, 17)"}}),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[158]||(t[158]=[l("if there is no containing class.")])),_:1})])])])]),t[192]||(t[192]=e(`<h4 id="伪代码理解ec内部结构" tabindex="-1">伪代码理解EC内部结构 <a class="header-anchor" href="#伪代码理解ec内部结构" aria-label="Permalink to &quot;伪代码理解EC内部结构&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecutionContext </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    codeEvaluationState,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 执行上下文在执行栈的状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Function,             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 执行的是函数时，值为函数对象，其他的都是null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Realm,                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 领域：有一种全局环境的感觉</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    LexicalEnviroment: {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这块文档描述感觉不太清晰，理解不了。参考博客别的大佬理解的，暂且理解为非var声明的变量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    VariableEnvironment: {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 该执行上下文中的VariableStatements</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    PrivateEnvironment: {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 类的话，暂时先不理解，熟悉后可以画类的内存图看看</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Generator: {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>重点理解关注的组件：</p><p>Function 函数</p><ul><li>当前执行上下文是函数执行上下文时（评估函数对象代码的理解），值为函数对象，其他的都是null</li></ul><p>LexicalEnviroment 词法环境</p>`,6)),s("ul",null,[t[168]||(t[168]=s("li",null,"官方描述实在没理解，有大佬明白的可以交流下",-1)),s("li",null,[t[162]||(t[162]=l("从其他文章看的：暂时过渡下 ")),o(r,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:n(()=>t[159]||(t[159]=[l("一般是")])),_:1}),t[163]||(t[163]=s("code",null,'<font style="color:rgb(255, 80, 44);background-color:rgb(255, 245, 245);">let</font>',-1)),o(r,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:n(()=>t[160]||(t[160]=[l(", ")])),_:1}),t[164]||(t[164]=s("code",null,'<font style="color:rgb(255, 80, 44);background-color:rgb(255, 245, 245);">const</font>',-1)),o(r,{style:{color:"rgb(102, 102, 102)","background-color":"rgb(248, 248, 248)"}},{default:n(()=>t[161]||(t[161]=[l(" 声明的变量存储在该词法环境中，")])),_:1}),t[165]||(t[165]=l("我理解是可以从词法环境的环境记录中找到")),t[166]||(t[166]=s("code",null,"非var标识符",-1)),t[167]||(t[167]=l("对应的映射值"))])]),t[193]||(t[193]=s("p",null,"VariableEnvironment 变量环境",-1)),t[194]||(t[194]=s("ul",null,[s("li",null,[l("VariableStatements "),s("code",null,"var"),l("声明的变量可在"),s("code",null,"变量环境"),l("的环境记录中找到对应的映射值")])],-1)),s("blockquote",null,[o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[169]||(t[169]=[l("The LexicalEnvironment and VariableEnvironment components of an execution context are always ")])),_:1}),t[175]||(t[175]=l("[")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[170]||(t[170]=[l("Environment Records")])),_:1}),t[176]||(t[176]=l("](https://262.ecma-international.org/15.0/index.html?_gl=1*qxsvcj*_ga*MzQwMjYwNjQxLjE3MzMyMDU5NjU.*_ga_TDCK4DWEPP*MTczMzIwNTk2NC4xLjEuMTczMzIwNzAxMC4wLjAuMA..#sec-environment-records)")),o(r,{style:{color:"rgb(17, 17, 17)"}},{default:n(()=>t[171]||(t[171]=[l(".")])),_:1}),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[172]||(t[172]=[l("执行上下文中的 LexicalEnvironment 和 VariableEnvironment 组件始终是")])),_:1}),t[177]||(t[177]=l("**")),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[173]||(t[173]=[l("环境记录")])),_:1}),t[178]||(t[178]=l("**")),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[174]||(t[174]=[l("。")])),_:1})]),o(r,{style:{color:"rgb(36, 43, 52)"}}),s("div",U,[t[180]||(t[180]=s("p",{class:"custom-block-title"},"INFO",-1)),o(r,{style:{color:"rgb(36, 43, 52)"}},{default:n(()=>t[179]||(t[179]=[l("到此，我们已经对EC有一个大概的认知，也知道重点组件词法环境、变量环境其实就是是环境记录。那么什么是环境记录，怎么理解？ ")])),_:1})])])}const Y=i(g,[["render",O]]);export{K as __pageData,Y as default};
